name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
  push:
    branches: ["test-branch"]

permissions:
  contents: read

jobs:
  lockfile:
    if: false
    name: Check lockfile up to date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check lockfile
        run: bazel mod deps --lockfile_mode=error

  ci-build-test:
    name: CI build and unit test
    runs-on: distroless-ci-large-ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Mount bazel caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel-repo
          key: bazel-cache-deps-ci1-${{ github.sha }}
          restore-keys: |
            bazel-cache-deps-ci1-${{ github.sha }}
            bazel-cache-deps-ci1-
      - name: Free space
        run: |
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y azure-cli google-cloud-cli google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          rm -rf /usr/share/dotnet/
      - name: Evaluate Targets
        id: evaluate-targets
        run: |
          targets=$(bazel query 'kind(oci_image, deps(//java:java17_root_amd64_debian12))')
          echo "TARGETS=$targets" >> $GITHUB_ENV
      - name: Fetch
        run: |
          for i in $(seq 10); do 
            bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc fetch $TARGETS && break || sleep 180;
          done
      - name: Build All Images
        run: |
          bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc build $TARGETS
      - name: Unit Tests
        run: bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc test $TARGETS --build_tests_only
      - name: Build Examples
        run: bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc build //examples/...

  ci-images:
    name: CI image tests
    needs: ci-build-test
    runs-on: distroless-ci-large-ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Mount bazel caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/bazel-repo
          key: bazel-cache-deps-ci2-${{ github.sha }}
          restore-keys: |
            bazel-cache-deps-ci2-${{ github.sha }}
            bazel-cache-deps-ci2-
      - name: Free space
        run: |
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y azure-cli google-cloud-cli google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          rm -rf /usr/share/dotnet/
      - name: Evaluate Targets
        id: evaluate-targets
        run: |
          targets=$(bazel query 'kind(oci_image, deps(//java:java17_root_amd64_debian12))')
          echo "TARGETS=$targets" >> $GITHUB_ENV
      - name: Fetch
        run: |
          for i in $(seq 20); do 
            bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc fetch $TARGETS && break || sleep 10;
          done
      - name: Image Tests
        run: bazel --bazelrc=$GITHUB_WORKSPACE/.github/workflows/ci.bazelrc test $TARGETS
